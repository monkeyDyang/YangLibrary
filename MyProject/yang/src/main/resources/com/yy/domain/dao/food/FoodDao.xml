<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yy.domain.dao.food.FoodDao">
    <resultMap id="FoodMap" type="com.yy.domain.model.entity.food.Food">
        <id property="ID" column="id" />
        <result property="foodName" column="food_name" />
        <result property="Weight" column="weight" />
        <result property="isInclude" column="is_include" />
        <result property="isDel" column="is_del" />
    </resultMap>

    <sql id="base_all_column">
        id,food_name,weight,is_include,is_del
    </sql>

<!--    select * from food-->
    <select id="getList" resultMap="FoodMap" resultType="com.yy.domain.model.entity.food.Food">
            select <include refid="base_all_column"></include> from food
    </select>

<!--    select * from food where id = #{id}-->
    <select id="getByID" resultMap="FoodMap" resultType="com.yy.domain.model.entity.food.Food" parameterType="Integer">
        select
            <include refid="base_all_column"></include>
        from food
        where
            id = #{id}
    </select>

<!--    select * from food where food_name = #{name}-->
    <select id="getByName" resultMap="FoodMap" resultType="com.yy.domain.model.entity.food.Food" parameterType="String">
        select
            <include refid="base_all_column"></include>
        from food
        where
            food_name = #{name}
    </select>

<!--    insert into food(id,food_name,weight,is_include,is_del) value(...)-->
<!--    自增主键useGeneratedKeys、keyProperty-->
    <insert id="insertFood" useGeneratedKeys="true" keyProperty="ID" parameterType="com.yy.domain.model.entity.food.Food">
        insert into food(<include refid="base_all_column"></include>)
        values (#{food.ID,jdbcType=INTEGER},#{food.foodName,jdbcType=VARCHAR},1,0,0)
    </insert>

<!--    update food set xx=xx where id = #{ID}-->
    <update id="updateFoodByID" >
        update food
        <set>
            <if test="food.foodName != null">
                food_name = #{food.foodName,jdbcType=VARCHAR},
            </if>
            <choose>
                <when test="food.Weight != null">
                    weight = #{food.weight,jdbcType=INTEGER},
                </when>
                <otherwise>
                    weight = 1,
                </otherwise>
            </choose>
            <choose>
                <when test="food.isInclude != null">
                    is_include = #{food.isInclude,jdbcType=INTEGER},
                </when>
                <otherwise>
                    is_include = 0,
                </otherwise>
            </choose>
            <choose>
                <when test="food.isDel != null">
                    is_del = #{food.isDel,jdbcType=INTEGER},
                </when>
                <otherwise>
                    is_del = 0,
                </otherwise>
            </choose>
        </set>
        <choose>
            <when test="ID != null">
                where id = #{ID}
            </when>
            <otherwise>
                where 1 = 0
            </otherwise>
        </choose>
    </update>

<!--    批量修改-->
    <update id="updateList">
        update food
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="food_name =case" suffix="end,">
                <foreach collection="list" item="food" index="index">
                    <if test="food.foodName != null">
                        when id = #{food.ID} then #{food.foodName}
                    </if>
                </foreach>
            </trim>
            <trim prefix="weight =case" suffix="end,">
                <foreach collection="list" item="food" index="index">
                    <if test="food.Weight != null">
                        when id = #{food.ID} then #{food.Weight}
                    </if>
                </foreach>
            </trim>
            <trim prefix="is_include =case" suffix="end,">
                <foreach collection="list" item="food" index="index">
                    <if test="food.isInclude != null">
                        when id = #{food.ID} then #{food.isInclude}
                    </if>
                </foreach>
            </trim>
            <trim prefix="is_del =case" suffix="end,">
                <foreach collection="list" item="food" index="index">
                    <if test="food.isDel != null">
                        when id = #{food.ID} then #{food.isDel}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="food" index="index">
            id = #{food.ID}
        </foreach>
    </update>

<!--    delete from food where id = #{ID}-->
    <delete id="deleteFood">
        delete from food
        <choose>
            <when test="food.ID != null">
                where id = #{food.ID}
            </when>
            <otherwise>
                where 1 = 0
            </otherwise>
        </choose>
    </delete>

<!--    软删除-->
<!--    update food set is_del = 1 where id = #{id}-->
    <update id="softDeleteFood">
        update food
        <set>
            is_del = 1
        </set>
        <choose>
            <when test="id != null">
                where id = #{id}
            </when>
            <otherwise>
                where 1 = 0
            </otherwise>
        </choose>
    </update>
</mapper>